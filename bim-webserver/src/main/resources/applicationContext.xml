<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

  <context:property-placeholder location="classpath:jdbc.properties"/>

  <context:annotation-config/>
  <context:component-scan
    base-package="com.family.webserver.service"/>


  <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="0"/>
    <!-- 连接池最大使用连接数量 -->
    <property name="maxActive" value="20"/>
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="0"/>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="60000"/>
    <!--
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
    -->
    <property name="validationQuery" value="${validationQuery}"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <property name="testWhileIdle" value="true"/>
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="25200000"/>
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="true"/>
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="1800"/>
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true"/>
    <!-- 监控数据库 -->
    <!-- <property name="filters" value="stat" /> -->
    <property name="filters" value="mergeStat"/>
  </bean>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <tx:advice id="txAdvisor" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="remove*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="approve*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="reject*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="retrieve*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="saveOrUpdate*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
      <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
      <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
      <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="serviceTxPc" expression="execution(* com.family.webserver.service.*.*(..))"/>
    <aop:advisor pointcut-ref="serviceTxPc" advice-ref="txAdvisor"/>
  </aop:config>

  <!--也可通过注解进行事务控制-->
  <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="com.family.webserver.entity"/>
  </bean>

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.family.webserver.mapper"/>
  </bean>

  <bean id="singleThreadPool" class="java.util.concurrent.Executors"
        factory-method="newSingleThreadExecutor" destroy-method="shutdown">
  </bean>

</beans>
